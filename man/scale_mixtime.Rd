% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scale-time.R
\name{scale_x_mixtime}
\alias{scale_x_mixtime}
\title{Position scales for mixtime data}
\usage{
scale_x_mixtime(
  name = waiver(),
  breaks = waiver(),
  time_breaks = waiver(),
  minor_breaks = waiver(),
  time_minor_breaks = waiver(),
  labels = waiver(),
  time_labels = waiver(),
  chronon_common = waiver(),
  align_mixed = 0.5,
  warps = waiver(),
  time_warps = waiver(),
  limits = NULL,
  expand = waiver(),
  oob = scales::censor,
  guide = waiver(),
  position = "bottom",
  sec.axis = waiver()
)
}
\arguments{
\item{name}{The name of the scale. Used as the axis or legend title. If
\code{waiver()}, the default, the name of the scale is taken from the first
mapping used for that aesthetic. If \code{NULL}, the legend title will be
omitted.}

\item{breaks}{One of:
\itemize{
\item \code{NULL} for no breaks
\item \code{waiver()} for the breaks specified by \code{date_breaks}
\item A \code{Date}/\code{POSIXct} vector giving positions of breaks
\item A function that takes the limits as input and returns breaks as output
}}

\item{time_breaks}{A duration giving the distance between breaks like
"2 weeks", or "10 years". If both \code{breaks} and \code{time_breaks} are specified,
\code{time_breaks} wins.}

\item{minor_breaks}{One of:
\itemize{
\item \code{NULL} for no breaks
\item \code{waiver()} for the breaks specified by \code{date_minor_breaks}
\item A \code{Date}/\code{POSIXct} vector giving positions of minor breaks
\item A function that takes the limits as input and returns minor breaks as
output
}}

\item{time_minor_breaks}{A duration giving the distance between minor breaks like
"2 weeks", or "10 years". If both \code{minor_breaks} and \code{time_minor_breaks} are
specified, \code{time_minor_breaks} wins.}

\item{labels}{One of the options below. Please note that when \code{labels} is a
vector, it is highly recommended to also set the \code{breaks} argument as a
vector to protect against unintended mismatches.
\itemize{
\item \code{NULL} for no labels
\item \code{waiver()} for the default labels computed by the
transformation object
\item A character vector giving labels (must be same length as \code{breaks})
\item An expression vector (must be the same length as breaks). See ?plotmath for details.
\item A function that takes the breaks as input and returns labels
as output. Also accepts rlang \link[rlang:as_function]{lambda} function
notation.
}}

\item{time_labels}{Uses strftime strings or similar to format the labels from
the time points.}

\item{chronon_common}{A time unit that defines the common chronon to use for
mixed granularity (e.g. \code{mixtime::tu_day(1L)}). The default automatically
selects it as the finest chronon that all time points can be represented in.}

\item{align_mixed}{A number between 0 and 1 defining how to align coarser
granularities onto the common time scale. 0 means start alignment,
1 means end alignment, and 0.5 means center alignment (the default).}

\item{warps}{Normalises the time scale to have a consistent length between
specified time points, one of:
\itemize{
\item \code{NULL} or \code{waiver()} for no warping (the default)
\item A \code{mixtime} vector giving positions of warping points
\item A function that takes the limits as input and returns warping points as
output
}}

\item{time_warps}{A duration giving the distance between temporal warping
like "2 weeks", or "10 years". If both \code{warps} and \code{time_warps} are
specified, \code{time_warps} wins.}

\item{limits}{One of:
\itemize{
\item \code{NULL} to use the default scale range
\item A numeric vector of length two providing limits of the scale.
Use \code{NA} to refer to the existing minimum or maximum
\item A function that accepts the existing (automatic) limits and returns
new limits. Also accepts rlang \link[rlang:as_function]{lambda} function
notation.
Note that setting limits on positional scales will \strong{remove} data outside of the limits.
If the purpose is to zoom, use the limit argument in the coordinate system
(see \code{\link[ggplot2:coord_cartesian]{coord_cartesian()}}).
}}

\item{expand}{For position scales, a vector of range expansion constants used to add some
padding around the data to ensure that they are placed some distance
away from the axes. Use the convenience function \code{\link[ggplot2:expansion]{expansion()}}
to generate the values for the \code{expand} argument. The defaults are to
expand the scale by 5\% on each side for continuous variables, and by
0.6 units on each side for discrete variables.}

\item{oob}{One of:
\itemize{
\item Function that handles limits outside of the scale limits
(out of bounds). Also accepts rlang \link[rlang:as_function]{lambda}
function notation.
\item The default (\code{\link[scales:oob]{scales::censor()}}) replaces out of
bounds values with \code{NA}.
\item \code{\link[scales:oob]{scales::squish()}} for squishing out of bounds values into range.
\item \code{\link[scales:oob]{scales::squish_infinite()}} for squishing infinite values into range.
}}

\item{guide}{A function used to create a guide or its name. See
\code{\link[ggplot2:guides]{guides()}} for more information.}

\item{position}{For position scales, The position of the axis.
\code{left} or \code{right} for y axes, \code{top} or \code{bottom} for x axes.}

\item{sec.axis}{\code{\link[ggplot2:sec_axis]{sec_axis()}} is used to specify a secondary axis.}
}
\description{
These are the default scales for mixtime vectors, responsible for mapping
time points to aesthetics along with identifying break points and labels for
the axes and guides. To override the scales behaviour manually, use
\verb{scale_*_mixtime}. The primary purpose of these scales is to scale time
points across multiple granularities onto a common time scale. This is
achieved by identifying and coercing all time points to the finest chronon
that all time points can be represented in. This common time chronon is
automatically identified, but can be manually specified using the
\code{common_time}.
}
\section{Practical usage}{


When using \code{mixtime} vectors to represent time variables in ggplot2, these
scales are automatically applied. In most cases, the default behaviour will
be sufficient for scaling time points into plot aesthetics. These scales can
be used to manually adjust the scaling behaviour, such as adjusting the
breaks and labels or using a different common time scale.

Similarly to the temporal scales in ggplot2 (\code{\link[ggplot2:scale_date]{ggplot2::scale_x_date()}} and
\code{\link[ggplot2:scale_date]{ggplot2::scale_x_datetime()}}), these scales can adjust the breaks and labels
using duration-based intervals and strftime-like formatting. These time aware
options are prefixed with \code{time_} (e.g. \code{time_breaks} and \code{time_labels}),
and take precedence over the non-time aware options (e.g. \code{breaks} and
\code{labels}). The scale's breaks can be specified with \verb{mixtime::duration`` objects (e.g. }time_breaks = mixtime::months(1L)\verb{), or with strings that can be parsed into durations (e.g. `time_breaks = "1 month"`). Labels for time points in Gregorian calendars can be specified using [base::strftime()] formats (e.g. `time_labels = "\%b \%Y"} for "Jan 2020"). Concise strings for
non-Gregorian calendars are not yet supported, but can be created using
custom label functions (e.g. \code{labels = function(x) { ... }}).

A core feature of these scales is the ability to handle time from multiple
timezones, granularities, and calendars. This is achieved by mapping all time
points to a common time scale, which is automatically identifying the finest
compatible chronon that can represent the input data. This allows time points
across different granularities (e.g. \link[base:DateTimeClasses]{base::POSIXt}, \link[base:Dates]{base::Date}, and
\link[mixtime:gregorian-continuous]{mixtime::yearmonth}) to be plotted together on a common time scale. In this
case the finest chronon is 1 second (from \link[base:DateTimeClasses]{base::POSIXt}), so all time points
are mapped to a 1 second chronon for plotting. Mapping day and month chronons
to seconds introduces indeterminancy - which second should be used to
represent a day or month? This is resolved using the \code{time_align} argument,
which defaults to center alignment. This means that a day is mapped to noon,
and a month is mapped to the middle of the month.

Another time specific feature of these scales is temporal warping. This
adjusts the mapping of time points to plot aesthetics to have a consistent
length between specified time points. This is most useful in comparing the
shapes of cycles with irregular durations, including:
\itemize{
\item astronomical cycles (e.g. the rising and setting of the sun)
\item economic cycles (e.g. growth and recession phases of economies)
\item predator-prey cycles (e.g. population dynamics of interacting species)
\item biological cycles (e.g. hormonal cycles)
\item calendar cycles (e.g. days in each month)
}

Further details about time specific scale options are described in the
following sections.
}

\section{Granularity alignment}{


Visualising mixed granularity time data introduces indeterminacy in the
mapping of less precise time points onto a common time scale. For example,
plotting monthly and daily data together raises the question of where to
place the monthly points relative to the daily points. By default, mixtime
uses center alignment, mapping the monthly points to the middle of the
month. This is controlled using the \code{time_align} argument, which accepts a
value between 0 (start alignment) and 1 (end alignment) and defaults to 0.5.

The common time scale that defines how all granularities are mapped is
automatically identified based on the input data. This is achieved by finding
the finest chronon that all time points can be represented in. For example,
if the data contains both monthly and daily time points, the common time scale
will be daily, with the monthly points aligned according to the \code{time_align}
argument. If multiple time zones are present, the common time zone will
default to UTC. The common time scale can be manually specified using the
\code{common_time} argument, which accepts a \code{mixtime::time_unit}.
}

\section{Temporal warping}{


Time scales can be warped to have a consistent length between specified time
points. This is useful when visually exploring cyclical patterns where each
cycle has varying length. By warping the time scale, the shape of each cycle
can be more easily compared. Temporal warping is controlled using the \code{warps}
argument, which accepts a \code{mixtime} vector defining the positions of the
warping points. Calendar-based warping points can be conveniently specified
using the \code{time_warps} argument, which accepts a duration like "1 month".
}

\examples{
library(ggplot2)
library(dplyr)
uad_month <- tibble(
  time = mixtime::yearmonth(36L + 0:71),
  value = USAccDeaths
)
uad_year <- uad_month |>
  group_by(time = mixtime::year(time)) |>
  summarise(value = mean(value), .groups = "drop")

bind_rows(
  month = uad_month,
  year = uad_year,
  .id = "grain"
) |>
  ggplot(aes(time, value, color = grain)) +
  geom_line() +
  scale_x_mixtime(align_mixed = 1)

}
